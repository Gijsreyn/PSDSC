function Get-PsDscPowerShellResourceSchema
{
    <#
    .SYNOPSIS
        Generates a custom schema for a PowerShell DSC resource based on the cache file and schema definition.

    .DESCRIPTION
        The function Get-PsDscPowerShellResourceSchema generates a custom schema for a PowerShell DSC resource based on the cache file and schema definition.

    .PARAMETER Resource
        The resource to look for in the cache file.

    .PARAMETER CacheFilePath
        The path to the cache file. The cache file is generated by running the 'Find-PsDscResource' function.

    .EXAMPLE
        PS C:\> Get-PsDscPowerShellResourceSchema -Resource 'Microsoft/OSInfo' -CacheFilePath "$env:LocalAppData\dsc\PSAdapterCache.json"

    .NOTES
        For more details, go to module repository at: https://github.com/Gijsreyn/PSDSC.
    #>
    [CmdletBinding()]
    param
    (
        [Parameter(Mandatory = $true)]
        [string]$Resource,

        [Parameter(Mandatory = $true)]
        [string]$CacheFilePath
    )

    try
    {
        $cache = Get-Content -Path $CacheFilePath | ConvertFrom-Json

        $cacheEntry = $cache.ResourceCache | Where-Object { $_.Type -eq $Resource }

        if ($cacheEntry)
        {
            $properties = $cacheEntry.DscResourceInfo.Properties | ForEach-Object {
                [PSCustomObject]@{
                    $_.Name = [PSCustomObject]@{
                        description = $_.Description
                        type        = $_.PropertyType
                    }
                }
            }

            return [PSCustomObject]@{
                '$schema'   = 'https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/2024/04/bundled/resource/manifest.json'
                type        = $Resource
                description = $cacheEntry.DscResourceInfo.Description
                tags        = @('DSCResource')
                version     = $cacheEntry.DscResourceInfo.Version
                schema      = [PSCustomObject]@{
                    embedded = [PSCustomObject]@{
                        "`$schema" = "https://json-schema.org/draft/2020-12/schema"
                        title      = $cacheEntry.Type.Split("/")[1]
                        type       = 'object'
                        required   = @($cacheEntry.DscResourceInfo.Properties | Where-Object { $_.IsMandatory } | ForEach-Object {
                                $_.Name
                            })
                        properties = $properties
                    }
                }
            }
        }
    }
    catch
    {
        Write-Warning -Message "Failed to read the cache file. The error was: $_"
        return
    }
}
